// This file has been autogenerated from a class added in the UI designer.

using System;
using ExamenParcial2.Models;
using Foundation;
using UIKit;
using LinqToTwitter;
using System.Collections.Generic;

namespace ExamenParcial2 {
	public partial class TableViewController : UITableViewController/*,IUISearchResultsUpdating*/
	{
		UISearchController searchController;
		List<Status> tweets;

		public TableViewController (IntPtr handle) : base (handle)
		{

		}
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			InitializeComponents ();
		}

		public override nint NumberOfSections (UITableView tableView)
		{
			return 1;
		}
		public override nint RowsInSection (UITableView tableView, nint section)
		{
			return tweets.Count;
		}

		public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
		{
			try {
				var cell = tableView.DequeueReusableCell (Views.TweetTableViewCell.Key, indexPath) as Views.TweetTableViewCell;

				if (tweets.Count == 0) {
					cell.TweetText = "No matching results";
					cell.FavoritedText = "0";
					cell.RetweetedText = "0";
				} else {
					//cell.TextLabel.LineBreakMode = UILineBreakMode.WordWrap;
					//cell.TextLabel.Lines = 0;
					//cell.TweetLabel = new UILabel ();
					//cell.TweetLabel.LineBreakMode = UILineBreakMode.WordWrap;
					//cell.TweetLabel.Lines = 0;
					//cell.TweetText = 
					cell.TweetText = tweets [indexPath.Row].FullText;
					cell.FavoritedText = tweets [indexPath.Row].FavoriteCount.ToString () ?? "0";
					cell.RetweetedText = tweets [indexPath.Row].RetweetCount.ToString ();
				}

				return cell;


			} catch (Exception ex) {
				return base.GetCell (tableView, indexPath);
			}

		}
		/*public void UpdateSearchResultsForSearchController (UISearchController searchController)
		{
			
		}*/

		void InitializeComponents ()
		{

			tweets = new List<Status> ();
			Linq2TwitterManager.SharedInstance.TweetsFetched += Linq2TwitterManager_TweetsFetched;
			Linq2TwitterManager.SharedInstance.FailedTweetsFetched += Linq2TwitterManager_FailedTweetsFetched;

			searchController = new UISearchController (searchResultsController: null) {
				//SearchResultsUpdater =this,
				DimsBackgroundDuringPresentation = false,


			};
			searchController.SearchBar.SearchButtonClicked += (sender, e) => {
				Linq2TwitterManager.SharedInstance.SearchTweets (searchController.SearchBar.Text);
			};
			TableView.TableHeaderView = searchController.SearchBar;
			TableView.RowHeight = UITableView.AutomaticDimension;
			TableView.EstimatedRowHeight = 60;
			//TableView.TableHeaderView
		}

		private void Linq2TwitterManager_FailedTweetsFetched (object sender, TweetsFetchedFailedEventArgs e)
		{

			InvokeOnMainThread (() => {
				searchController.DismissViewController (true, null);
				var alert = UIAlertController.Create ("Error", "No se pudieron cargar resultados", UIAlertControllerStyle.Alert);
				alert.AddAction (UIAlertAction.Create ("OK", UIAlertActionStyle.Cancel, null));
				//if(PresentedViewController ==null)
				//{

				PresentViewController (alert, true, null);
			});
			//} else{
			//	DismissViewController (true,null);
			//	PresentViewController (alert, true, null);
			//}


			//InvokeOnMainThread (() => TableView.ReloadData ());
			/* InvokeOnMainThread(() =>
			 {
			     var alert = UIAlertController.Create("Error", "No se pudieron cargar resultados", UIAlertControllerStyle.Alert);
			     alert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Cancel, null));
			     PresentViewController(alert, true, null);

			 });*/

		}

		void Linq2TwitterManager_TweetsFetched (object sender, TweetsFetchedEventArgs e)
		{
			tweets = e.Tweets;
			InvokeOnMainThread (() => TableView.ReloadData ());
		}
		partial void btnIcons_TouchUpInside (NSObject sender)
		{
			UIApplication.SharedApplication.OpenUrl (new NSUrl ("https://icons8.com/"));
			// [[UIApplication sharedApplication] openURL:[NSURL URLWithString:@"http://www.daledietrich.com"]];
		}
	}
}
